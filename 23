'''y исполнителя Калькулятор две команды, которым присвоены номера.

1. Прибавь 2.
2. Умножь на 5.

Первая из них увеличивает число на экране на 2, вторая увеличивает его в 5 раз.
Программа для Калькулятора — это последовательность команд.
Сколько есть программ, которые число 2 преобразуют в число 50?
2 -> 50
'''

def f(n, k):
    if n == k:
        return 1
    if n > k:
        return 0
    if n < k:
        return f(n+2, k) + f(n*5, k)

print(f(2, 50))



'''Исполнитель А16 преобразует число, записанное на экране.
У исполнителя есть три команды, которым присвоены номера.

1.Прибавить 1.
2.Прибавить 2.
3.Умножить на 2.

Сколько существует таких программ, которые исходное число 3 преобразуют в число 12 и при этом траектория вычислений программы содержит число 10?

Траектория вычислений программы — это последовательность результатов выполнения всех команд программы. 
3 -> 12
'''

def f(n, k):
    if n == k:
        return 1
    if n > k:
        return 0
    if n < k:
        return f(n+1, k) + f(n+2, k) + f(n*2, k)

print(f(3, 10) * f(10, 12))




'''Исполнитель НечетМ преобразует число на экране. У исполнителя НечетМ две команды, которым присвоены номера.

1. Прибавь 1.
2. Сделай нечётное.

Первая из этих команд увеличивает число x на экране на 1, вторая переводит число x в число 2x+1. 
Сколько существует таких программ, которые число 1 преобразуют в число 27, причём траектория вычислений не содержит число 26? 
'''

def f(n, k):
    if n == k:
        return 1
    if n > k or n == 26:
        return 0
    if n < k:
        return f(n+1, k) + f(2*n+1, k)

print(f(1, 27))