'''y исполнителя Калькулятор две команды, которым присвоены номера.

1. Прибавь 2.
2. Умножь на 5.

Первая из них увеличивает число на экране на 2, вторая увеличивает его в 5 раз.
Программа для Калькулятора — это последовательность команд.
Сколько есть программ, которые число 2 преобразуют в число 50?
2 -> 50
'''

def f(n, k):
    if n == k:
        return 1
    if n > k:
        return 0
    if n < k:
        return f(n+2, k) + f(n*5, k)

print(f(2, 50))



'''Исполнитель А16 преобразует число, записанное на экране.
У исполнителя есть три команды, которым присвоены номера.

1.Прибавить 1.
2.Прибавить 2.
3.Умножить на 2.

Сколько существует таких программ, которые исходное число 3 преобразуют в число 12 и при этом траектория вычислений программы содержит число 10?

Траектория вычислений программы — это последовательность результатов выполнения всех команд программы. 
3 -> 12
'''

def f(n, k):
    if n == k:
        return 1
    if n > k:
        return 0
    if n < k:
        return f(n+1, k) + f(n+2, k) + f(n*2, k)

print(f(3, 10) * f(10, 12))




'''Исполнитель НечетМ преобразует число на экране. У исполнителя НечетМ две команды, которым присвоены номера.

1. Прибавь 1.
2. Сделай нечётное.

Первая из этих команд увеличивает число x на экране на 1, вторая переводит число x в число 2x+1. 
Сколько существует таких программ, которые число 1 преобразуют в число 27, причём траектория вычислений не содержит число 26? 
'''

def f(n, k):
    if n == k:
        return 1
    if n > k or n == 26:
        return 0
    if n < k:
        return f(n+1, k) + f(2*n+1, k)

print(f(1, 27))


'''Исполнитель преобразует число на экране. У исполнителя есть три команды, которые обозначены латинскими буквами:

A. Прибавить 2.
B. Умножить на 3.
C. Возвести в куб.

Программа для исполнителя – это последовательность команд. Необходимо найти количество существующих программ, для 
которых при исходном числе 3 результатом является число 125, при этом траектория вычислений не содержит числа 27 
и содержит не более 15 команд.'''

def f(n, k, c):    
    if n==k:
        return 1
    if n>k or n == 27 or c > 15:
        return 0
    if n<k:
        return f(n+2, k, c+1) + f(n*3,k,c+1)+ f(n**3,k,c+1)
print(f(3,125,0))   
    


'''Исполнитель ТриКоманды преобразует число на экране.

У исполнителя есть три команды, которым присвоены номера:

Прибавить 1.
Умножить на 2.
Умножить на 3.

Программа для исполнителя ТриКоманды — это последовательность команд.

Сколько существует непустых программ, для которых при исходном чётном положительном числе результатом работы является 
число 15?'''

def f(n, k):    
    if n==k:
        return 1
    if n>k:
        return 0
    if n<k:
        return f(n+1, k) + f(n*2,k)+ f(n*3,k)

s = 0
for n in range(2, 15, 2):
    s = s + (f(n, 15))

print(s)



'''Исполнитель преобразует число на экране. У исполнителя есть две команды, которые обозначены латинскими буквами:

A. Прибавить 2.
B. Умножить на 3.

Программа для исполнителя — это последовательность команд.

Сколько различных чисел можно получить с помощью программы из четырёх команд из числа 1?
'''

def f(n, k):    
    if k==4:
        return [n]
    else:
        return f(n+2, k+1) + f(n*3, k+1)

res = f(1, 0)

s = set(res)

print(s, len(s))
