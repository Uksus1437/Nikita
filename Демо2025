'''5
На вход алгоритма подаётся натуральное число N. Алгоритм строит по нему 
новое число R следующим образом. 
1. Строится двоичная запись числа N. 
2. Далее эта запись обрабатывается по следующему правилу: 
а) если число чётное, то к двоичной записи числа слева дописывается 10; 
б) если число нечётное, то к двоичной записи числа слева дописывается 1 
и справа дописывается 01. 
Полученная таким образом запись является двоичной записью искомого 
числа R. 
3. Результат переводится в десятичную систему и выводится на экран. 
Например, для исходного числа 410 = 1002 результатом является 
число 2010 = 101002, а для исходного числа 510 = 1012 это число 5310 = 
1101012. 
Укажите максимальное число R, которое может быть результатом работы 
данного алгоритма, при условии, что N не больше 12. В ответе запишите это 
число в десятичной системе счисления.'''
for n in range (0,13):
    s=bin(n)[2:]
    if n% 2 == 0:
        s="10"+s
    else:
        s="1"+s+"01"
    r=int(s,2 )
    print(r)


'''Черепахе был дан для исполнения следующий алгоритм: 
Повтори 9 [Вперёд 22 Направо 90 Вперёд 6 Направо 90] 
Поднять хвост 
Вперёд 1 Направо 90 Вперёд 5 Налево 90 
Опустить хвост 
Повтори 9 [Вперёд 53 Направо 90 Вперёд 75 Направо 90] 
  
Определите периметр области пересечения фигур, ограниченных заданными 
алгоритмом линиями.'''
from turtle import *
k=9
tracer(0)

for _ in range (9):
    forward (22*k)
    right(90)
    forward (6*k)
    right(90)
pu()
forward (1*k)
right(90)
forward (5*k)
left(90)
pd()
for _ in range (9):
    forward (53*k)
    right(90)
    forward (75*k)
    right(90)
    
pu()

for x in range (-50,50):
    for y in range (-50,50):
        setpos(x*k,y*k)
        dot(3)


done()




'''8
Определите количество 12-ричных пятизначных чисел, в записи которых 
ровно одна цифра 7 и не более трёх цифр c числовым значением, 
превышающим 8. '''
l=0
for z in '123456789ab':
    for y in '0123456789ab':
        for x in '0123456789ab':
            for k in '0123456789ab':
                for q in '0123456789ab':
                    i=z+y+x+k+q
                    co = i.count('9') + i.count('a') + i.count('b')
                    if i.count('7')==1 and co<= 3:
                        l+=1

print(l)



'''Операнды арифметического выражения записаны в системе счисления  
с основанием 19. 
 
98897x21(19) + 2x923(19) 

В записи чисел переменной x обозначена неизвестная цифра из алфавита  
19-ричной системы счисления. Определите наибольшее значение x, при 
котором значение данного арифметического выражения кратно 18.  
Для найденного x вычислите частное от деления значения арифметического 
выражения на 18 и укажите его в ответе в десятичной системе счисления. 
Основание системы счисления указывать не нужно. 

5//2 = 2    - частное
5%2 = 1     - остаток

'''
for x in "0123456789abcdefghi":
    z=int('98897' + x + "21", 19)
    z1=int("2"+x+"923",19)
    if (z+z1 )%18==0:
        print((z+z1)//18, x)
        
           
'''23
Исполнитель преобразует число на экране. 
У исполнителя есть две команды, которые обозначены латинскими буквами: 
A. Вычти 2 
B. Найди целую часть от деления на 2 
Программа для исполнителя – это последовательность команд. 
Сколько существует программ, для которых при исходном числе 38 
результатом является число 2 и при этом траектория вычислений содержит 
число 16? 

38 -> 2
'''
def f(n,k):
    if n==k:
        return 1
    if n<k:
        return 0
    if n>k:
        return f(n-2,k)+f(n//2,k)

print(f(38,16)*f(16,2))



'''Операнды арифметического выражения записаны в системе счисления с неизвестным основанием.
LANCELOT(a) + ELSA(a)-DRAGON(a) + CAT(a)
Основание о не превышает 36. Найдите результат вычисления выражения, которое без остатка делится на 1747. В ответ запишите частное.

2 - 01

829A()

11 - 0123456789A
12 - 0123456789AB

int('5') = 5
str(5) = '5'

% - отсаток
// - часное
'''
for x in range(30,37):
    c1=int('LANCELOT',x)
    c2=int('ELSA',x)
    c3=int('CAT',x)
    c4=int('DRAGON',x)
    
    if (c1+c2-c4+c3)%1747==0:
        print((c1+c2-c4+c3)//1747)




'''В файле содержится последовательность целых чисел, абсолютное значение которых не превышает 10000. 
Определите количество троек элементов последовательности, в которых есть элемент, оканчивающийся на 11. 
При этом среднее арифметическое тройки должно быть больше среднего арифметического из всех элементов последовательности, кратных 11.

В ответе запишите количество троек чисел, а затем максимальную из сумм элементов таких троек.

В этой задаче под тройкой подразумеваются три идущих подряд элемента последовательности.
a = [1, 2, 3]

%100

134 27723
'''
f = open('17.txt').readlines()
a = [int(i) for i in f]

m11=[]
for q in range(len(a)):
    z = a[q]
    if z %11==0:
        m11.append(z)

sr = sum(m11)/len(m11)

mx=0
co=0
for i in range(len(a)-2):
    x=[a[i], a[i+1], a[i+2]]
    if abs(a[i])%100==11 or abs(a[i+1])%100==11 or abs(a[i+2])%100==11:
        if ((a[i]+ a[i+1]+ a[i+2])//3) > sr:
            co+=1
            mx=max(mx, sum(x) )
print(co, mx)
