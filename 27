'''Имеется набор данных, состоящий из пар положительных целых чисел. Необходимо выбрать из каждой пары ровно одно число так, чтобы сумма 
всех выбранных чисел не делилась на 3 и при этом была максимально возможной. Гарантируется, что искомую сумму получить можно. 
Программа должна напечатать одно число — максимально возможную сумму, соответствующую условиям задачи.

Входные данные.

Даны два входных файла (файл A и файл B), каждый из которых содержит в первой строке количество пар N (1 ≤ N ≤ 100 000). 
Каждая из следующих N строк содержит два натуральных числа, не превышающих 10000.

Пример организации исходных данных во входном файле:


1 3 
5 12
6 9
5 4
3 3
1 1

Для указанных входных данных значением искомой суммы должно быть число 32.

В ответе укажите два числа: сначала значение искомой суммы для файла А, затем для файла B.

Предупреждение: для обработки файла B не следует использовать переборный алгоритм, вычисляющий сумму для всех возможных вариантов, 
поскольку написанная по такому алгоритму программа будет выполняться слишком долго.


[['1', '3'], ['5', '12'], ...]


['1', '3']

'''

# Файл А
from random import shuffle

f = open('27.txt').readlines()
a=[(i.split()) for i in f ]

r = []
for _ in range(1, 1000000):
    s = []
    for i in a:
        shuffle(i)
        x = int(i[0])
        s.append(x)
    if sum(s)%3 != 0:
        r.append(sum(s))
        d
print(max(r))

# 127127

# Файл B
f = open('27.txt').readlines()
a=[(i.split()) for i in f ]
qw=[]
ost = []
s = 0

for x in range(len(a)):
    x1 = int(a[x][0])
    x2 = int(a[x][1])
    mx=max(x1, x2)
    qw.append(mx)
    if abs(x1-x2)%3!=0:
        ost.append(abs(x1-x2))
        
print(sum(qw) - min(ost), (sum(qw) - min(ost))%3)




