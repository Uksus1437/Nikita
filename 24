'''
Текстовый файл состоит не более чем из 10**6 символов X, Y и Z. 
Определите максимальное количество идущих подряд символов, среди которых каждые два соседних различны.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
        i
XXYYZZXZYY

c = 3

m = 3

3
'''


f=open('24.txt').readline()
a=[i for i in f]
c=1
mx=0

for i in range(len(a)-1):
    if a[i]!=a[i+1]:
      c+=1
      mx=max(mx, c) 
    else:
      c=1
print(mx)    






'''
Текстовый файл состоит не более чем из 10^6 символов X, Y и Z. Определите максимальную длину цепочки вида XYZXYZXYZ... 
(составленной из фрагментов XYZ, последний фрагмент может быть неполным).

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

i
**X

XYZXYZXYZ


XY

YYYYXYYYY

AX
'''


f=open('24.txt').readline()
c=0
mx=0

f = f.replace('XYZ', '*')
for i in range(len(f)-1):
    if f[i] =="*":
        c+=3
    else:
      if f[i] == "X" and f[i+1] == 'Y':
        c += 2
      elif f[i]=='X':
        c += 1
      
      mx = max(mx, c)
      c = 0
print(mx)



'''
Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. 
Строки содержат только заглавные буквы латинского алфавита (ABC…Z). Определите количество строк, в которых буква E встречается чаще, чем буква A.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.


f = ['asojkidniokasdsaikpd\n', 'iuoasfdhniuonnosedicviowe\n', ]


f[1] = 'iuoasfdhniuonnosedicviowe'

'''


f=open('24.txt').readlines()

f = ['asojkidniokasdsaikpd\n', 'iuoasfdhniuonnosedicviowe\n', 'aefpok,po,few\n']
c=0
for i in range(len(f)):
    if f[i].count('E') > f[i].count('A'):
      c+=1
print(c)




'''
Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. 
Строки содержат только заглавные буквы латинского алфавита (ABC…Z).

Необходимо найти строку, содержащую наименьшее количество букв G (если таких строк несколько, надо взять ту, которая находится в файле раньше), 
и определить, какая буква встречается в этой строке чаще всего. Если таких букв несколько, надо взять ту, которая позже стоит в алфавите.

'''


f=open('24.txt').readlines()
mn=10**10
c=0
for i in range(len(f)):
    if f[i].count('G') ==18:
        print(i)

for i in range(len(f)):
    if i == 332:
        print(f[i])
# print(f[i].count('G'))

al = 'QWERTYUIOPASDFGHJKLZXCVBNM'

m = 0

for n in al:
    m = max(m, f[332].count(n))

for n in al:
    if f[332].count(n) == 50:
        print(n)

print(n)

'''Текстовый файл состоит не более чем из  10^6
символов X, Y и Z. Определите максимальное количество идущих подряд одинаковых символов.
Для выполнения этого задания следует написать программу.
      i
YXZYXYYZZYZZ
'''

f = open('24.txt').readline()
c = 1
m = []
for i in range(len(f)-1):
    b1 = f[i]
    b2 = f[i+1]
    if b1 == b2:
        c += 1
    else:
        m.append(c)
        c = 1
print(max(m))




'''Текстовый файл состоит не более чем из 10^6 символов A, B и C. Определите максимальную длину цепочки вида ABABAB... 
(составленной из фрагментов AB, последний фрагмент может быть неполным).
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
i
C**C*

ABABA
   i
**AACCBA

'''
f=open('24.txt').readline()
c=0
m=[]
f = f.replace('AB', '*')

for i in range (len(f)):
    x=f[i]
    if x=='*':
        c+=2
    elif x == 'A':
        c += 1
        m.append(c)
        c = 0
    else:
        m.append(c)
        c = 0

print(max(m))



'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт.
Строки содержат только заглавные буквы латинского алфавита (ABC…Z). Определите количество строк, в которых буква E встречается чаще, чем буква A.
Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
f = ['ABC\n', 'ZXC\n', 'ZP\n', ':ASL\n', ' \n', 'MAMA']
'''

f=open('24.txt').readlines()
c=0
for i in f:
    e=i.count("E")
    a=i.count("A")
    if a<e:
        c+=1
print(c)
    



'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). 
Определите символ, который чаще всего встречается в файле сразу после буквы A.

Например, в тексте ABCAABADDD после буквы A два раза стоит B, по одному разу — A и D. Для этого текста ответом будет B.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.
i
AJCAJNCAB

'''
f=open('24.txt').readline()
s = {}
for i in range(len(f)):
    if f[i]=="A":
        k=f[i+1]
        if k not in s.keys():
            s[k] = 1
        else: 
            s[k] +=1
print(s)
            



'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). 
Определите символ, который чаще всего встречается в файле между двумя одинаковыми символами.

Например, в тексте CBCABABACCC есть комбинации CBC, ABA (два раза), BAB и CCC. 
Чаще всего — 3 раза — между двумя одинаковыми символами стоит B, в ответе для этого случая надо написать B.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

BABCBC
'''

f=open("24.txt").readline()
s={}
for i in range(len(f)-2):
    a=f[i]
    c=f[i+1]
    b=f[i+2]
    if a == b:
        if c not in s:
            s[c]=1
        else:
            s[c]+=1
    

print(s)
print(max(s.values()))


'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. 
Строки содержат только заглавные буквы латинского алфавита (ABC…Z).

Необходимо найти строку, содержащую наименьшее количество букв N 
(если таких строк несколько, надо взять ту, которая находится в файле раньше), 
и определить, какая буква встречается в этой строке чаще всего. Если таких букв несколько, надо взять ту, которая позже стоит в алфавите.'''


f=open('24.txt').readlines()
mn=10**6
mi = 0
s={}
for i in range(len(f)):
    if f[i].count('N') < mn:
        mn = f[i].count('N')
        mi = i

st = f[mi]
for c in st:
    if c not in s:
        s[c]=1
    else:
        s[c]+=1

print(mi,s)
print(max(s.values()))


'''Текстовый файл содержит строки различной длины. Общий объём файла не превышает 1 Мбайт. 
Строки содержат только заглавные буквы латинского алфавита (ABC…Z).

В строках, содержащих менее 25 букв A, нужно определить и вывести максимальное расстояние между 
одинаковыми буквами в одной строке.
i 
ABCAAB

Пример. Исходный файл:

GIGA
GABLAB
NOTEBOOK
AGAAA

В этом примере во всех строках меньше 25 букв A. Самое большое расстояние между одинаковыми буквами  — 
в третьей строке между буквами O, расположенными в строке на 2-⁠й и 7-⁠й позициях.
 В ответе для данного примера нужно вывести число 5.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать 
с помощью данного алгоритма.
'''


f=open('24.txt').readlines()
mn=10**6
mi = 0
s=[]
co=0
mx=0
for i in range(len(f)):
    if f[i].count('A') < 25:
        s = f[i]
        for i in range(len(s)):
            co=0
            for j in range(i+1, len(s)):
                b1 = s[i]
                b2 = s[j]
                if b1 != b2:
                    co+=1
                else:
                    mx=max(mx, co+1)
print(mx)



'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). 
Определите максимальное количество идущих подряд символов, среди которых не более одной буквы D.

Для выполнения этого задания следует написать программу. 
Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

    0123456789
f = DABCDAABDB


s = [0, 4, 8, 10, 15, 23]
'''
f=open('24.txt').readline()
s=[]
for i in range(len(f)):
    if f[i]=="D":
        s.append(i)
mx=0
for i in range(len(s)-2):
    x = (s[i+2]-s[i])-1
    mx=max(mx, x)
print(mx)
         

'''Текстовый файл состоит из символов T, U, V, W, X, Y и Z.

Определите в прилагаемом файле максимальное количество идущих подряд символов 
(длину непрерывной подпоследовательности), среди которых символ Y встречается не более 150 раз.

Для выполнения этого задания следует написать программу.

    0123456789
f = DABCDAABDB

s = [0, 4, 8, 10, 15, 23]
'''
f=open('24.txt').readline()
s=[]
for i in range(len(f)):
    if f[i]=="Y":
        s.append(i)
mx=0
for i in range(len(s)-151):
    x = (s[i+151]-s[i])-1
    mx=max(mx, x)
print(mx)
         

'''Текстовый файл состоит из заглавных букв латинского алфавита А, В, C, D, Е и F. 
Определите максимальное количество идущих подряд символов в прилагаемом файле, 
среди которых пара символов CD (в указанном порядке) встречается не более 140 раз. 
Для выполнения этого задания следует написать программу.

    0123456789
f = CDABCDACDD
2:6 = 5
7-0 = 7-2 = 5

s = [0, 4, 7, 10, 15, 23]
'''
f=open('24.txt').readline()
s=[]
for i in range(len(f)):
    if f[i]=="C" and f[i+1] == 'D':
        s.append(i)
mx=0
for i in range(len(s)-141):
    x = (s[i+141]-s[i])
    mx=max(mx, x)
print(mx)
         


'''Текстовый файл содержит только буквы A, C, D, F, O. 
Определите максимальное количество идущих подряд групп символов вида:

гласная + гласная + согласная.
i
AODOAFA
'''
f=open('24.txt').readline()
s = f
co=0
i = 0
mx=0
while i < len(s):
    if (s[i] in "AO") and (s[i+1] in "AO") and (s[i+2] in "CDF"):
        co+=1
        i+=3
    else:
        mx=max(mx, co)
        co=0
        i+=1
print(mx)   
    

'''Текстовый файл состоит из символов A, B и C.
Определите максимальное количество идущих подряд пар символов AB или CB в прилагаемом файле.
Для выполнения этого задания следует написать программу.

BCBCAACB
B*CAA*
'''
f=open('24.txt').readline()
f=f.replace("AB", "*").replace("CB", "*")
co=0
mx = 0
for i in range(len(f)):
    if f[i]=="*":
        co+=1
        mx=max(mx, co)
    else:
        co=0
print(mx)




'''Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите символ, 
который чаще всего встречается в файле между двумя одинаковыми символами.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать 
с помощью данного алгоритма.

    i      
YYYABABABYYABABAYY

[A, B, Y, Y, Y, Y]

'''

f=open("24.txt").readline()

m=[]
c=0

for i in range(len(f)-2):
    if f[i]==f[i+2]:
        m.append(f[i+1])

m.sort()

s = 'QWERTYUIOPASDFGHJKLZXCVBNM'


for i in s:
    print(i, m.count(i))


'''Текстовый файл состоит не более чем из 10**6 символов латинского алфавита. Определите минимальную подстроку, 
содержащую 120 символов V. Для выполнения этого задания следует написать программу.

01234567890123     
DAAADAAADADAAD

 0  1  2  3   4
[0, 4, 8, 10, 13]


8 - 0 - 1 = 7
10 - 4 - 1 = 5
'''

f=open("24.txt").readline()

m=[]

for i in range(len(f)):
    if f[i]=="V":
        m.append(i)
n=[]
for i in range(len(m)-119):
    n.append((m[i+119]-m[i])+1)


print(min(n))



'''
Текстовый файл 24.txt состоит из символов A, B, C, D, E.

Определите максимальное число идущих подряд символов в файле, среди которых не встречается фрагмент «AB».

Для выполнения этого задания следует написать программу.

ABXXXXABXXAB

BXXXXA

i
ZXXXZXXZ
'''
a=open("24.txt") .readline()

s = a.split('AB')

mLen = []

for i in s:
    mLen.append(len(i))

print(max(mLen) + 2)



'''
Текстовый файл состоит из символов A, C, D, F и O.

Определите максимальное количество идущих подряд пар символов вида:

согласная + гласная.

Для выполнения этого задания следует написать программу.

 i
CACACA
'''
c=0
m=[]
a=open("24.txt") .readline()
a=a.replace("C","*").replace("D","*").replace("F","*")
a=a.replace("A","%").replace("O","%")
a=a.replace("*%","=")
for i in range (0,len(a)):
    if a[i]=="=":
        c+=1
    else:
        m.append(c)
        c=0
print(max(m))



'''
Текстовый файл содержит только заглавные буквы латинского алфавита (ABC…Z). Определите символ, который чаще всего встречается 
в файле между двумя одинаковыми символами.

Например, в тексте CBCABABACCC есть комбинации CBC, ABA (два раза), BAB и CCC. Чаще всего — 3 раза — между двумя 
одинаковыми символами стоит B, в ответе для этого случая надо написать B.

Для выполнения этого задания следует написать программу. Ниже приведён файл, который необходимо обработать с помощью данного алгоритма.

'''

a=open("24.txt").readline()
k=[]
# a = 'CBCABABACCC'
for i in range (len(a)-2):
    if a[i]==a[i+2]:
        k.append(a[i+1])


alph = 'QWERTYUIOPASDFGHJKLZXCVBNM'

res = []

for i in alph:
    res.append([k.count(i), i])

res.sort()

print(res)

# ['B', 'B', 'A', 'B', 'C']
# [[1, 'A'], [3, 'B'], [1, 'C']]



'''Текстовый файл состоит из цифр 0, 6, 7, 8, 9 и знаков арифметических операций «−» и «*» (вычитание и умножение). Определите максимальное 
количество символов в непрерывной последовательности, которая является корректным арифметическим выражением с целыми неотрицательными числами. 
В этом выражении никакие два знака арифметических операций не стоят рядом, в записи чисел отсутствуют незначащие (ведущие) 
нули и число 0 не имеет знака.

В ответе укажите количество символов.

5*-*096-0-75--9

5--096-5-75--9


5-, -, 096-5-75-, -9

- -  - 0

96-0-75
'''

f = open('24.txt').readline()

# f = '5*-*096-0-75--9'
f = f.replace('*', '-')
f = f.replace('-0-', '-5-')
f = f.replace('--', '- -').replace('-0', '- 0')
f = f.split()

print(max(f, key=len))

s = '79799-60-709-970-78680-797006866988009689-76687809-76796077-97079-990-8-9796-88977-6987790-87779-76-5-96-6-8766006666069770860808660-879097866096-8686-8-5'

print(len(s))